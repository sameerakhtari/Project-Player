
/*
 * PlayerGUI.java
 * -------------------------------------
 * This file defines the main GUI for the MP3 Player application.
 * A small "About" dialog was added for Hacktoberfest 2025.
 *
 * Original author: Sameer Akhtari
 * Minor update: Hacktoberfest contribution (Misbah Qureshi)
 */
import javax.swing.JFileChooser;
import javax.*;


/* 

this comment is added by Hamza Sherazi 

*/
public class PlayerGUI extends javax.swing.JFrame  {

    
    static String status="pause";
    int vol=1;
   
    String path;
    /**
     * Creates new form PlayerGUI
     */
    public PlayerGUI() {
        initComponents();
        setIcons();
       ccP.setVisible(false);
      // ðŸ”¹ Hacktoberfest addition: add a small Help -> About menu
        addAboutMenu();
        
           }

           /** Adds a simple "Help -> About" menu item */
    private void addAboutMenu() {
        javax.swing.JMenuBar menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu("Help");
        javax.swing.JMenuItem aboutItem = new javax.swing.JMenuItem("About");

        aboutItem.addActionListener(e -> showAboutDialog());
        helpMenu.add(aboutItem);
        menuBar.add(helpMenu);
        setJMenuBar(menuBar);
    }

    
       private void setIcons() {

        prevB.setContentAreaFilled(false);
        prevB.setFocusPainted(false);
        prevB.setBorderPainted(false);

        nextB.setContentAreaFilled(false);
        nextB.setFocusPainted(false);
        nextB.setBorderPainted(false);

        stopB.setContentAreaFilled(false);
        stopB.setFocusPainted(false);
        stopB.setBorderPainted(false);

        loopB.setContentAreaFilled(false);
        loopB.setFocusPainted(false);
        loopB.setBorderPainted(false);

        ccB.setContentAreaFilled(false);
        ccB.setFocusPainted(false);
        ccB.setBorderPainted(false);

        volumeB.setContentAreaFilled(false);
        volumeB.setFocusPainted(false);
        volumeB.setBorderPainted(false);

        listB.setContentAreaFilled(false);
        listB.setFocusPainted(false);
        listB.setBorderPainted(false);

        playB.setContentAreaFilled(false);
        playB.setFocusPainted(false);
        playB.setBorderPainted(false);

        loadFileB.setContentAreaFilled(false);
        loadFileB.setFocusPainted(false);
        loadFileB.setBorderPainted(false);

        ccP.setBorder(null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jColorChooser1 = new javax.swing.JColorChooser();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        prevB = new javax.swing.JButton();
        playB = new javax.swing.JButton();
        nextB = new javax.swing.JButton();
        stopB = new javax.swing.JButton();
        musicS = new javax.swing.JSlider();
        volumeB = new javax.swing.JButton();
        ccB = new javax.swing.JToggleButton();
        loopB = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ccP = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        listB = new javax.swing.JButton();
        volumeS = new javax.swing.JSlider();
        loadFileB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setMaximumSize(new java.awt.Dimension(847, 67));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        prevB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\backward-1.png")); // NOI18N
        prevB.setOpaque(false);
        prevB.addActionListener(evt -> prevBActionPerformed(evt));
        jPanel1.add(prevB, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 15, 40, 40));

        playB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\play-set.png")); // NOI18N
        playB.addActionListener(evt -> playBActionPerformed(evt));
        jPanel1.add(playB, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 2, 63, 63));

        nextB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\fast-forward.png")); // NOI18N
        nextB.addActionListener(evt -> nextBActionPerformed(evt));
        jPanel1.add(nextB, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 15, 40, 40));

        stopB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\stop-2.png")); // NOI18N
        stopB.addActionListener(evt -> stopBActionPerformed(evt));
        jPanel1.add(stopB, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 24, 22, 22));

        musicS.setBackground(new java.awt.Color(0, 0, 0));
        musicS.setForeground(new java.awt.Color(204, 51, 0));
        jPanel1.add(musicS, new org.netbeans.lib.awtextra.AbsoluteConstraints(241, 22, 517, -1));

        volumeB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\Vol.png")); // NOI18N
        volumeB.addActionListener(evt -> volumeBActionPerformed(evt));
        jPanel1.add(volumeB, new org.netbeans.lib.awtextra.AbsoluteConstraints(804, 22, 22, 22));

        ccB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\cc.png")); // NOI18N
        ccB.addActionListener(evt -> ccBActionPerformed(evt));
        jPanel1.add(ccB, new org.netbeans.lib.awtextra.AbsoluteConstraints(764, 22, 22, 22));

        loopB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\repeat.png")); // NOI18N
        loopB.addActionListener(evt -> loopBActionPerformed(evt));
        jPanel1.add(loopB, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 30, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player\\lower.jpg")); // NOI18N
        jLabel2.setAlignmentY(0.0F);
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 60));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setMaximumSize(new java.awt.Dimension(747, 116));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ccP.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        ccP.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jTextArea1.setText("sameer");
        ccP.setViewportView(jTextArea1);
        jPanel2.add(ccP, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 30, 582, 86));

        listB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\list-1.png")); // NOI18N
        listB.addActionListener(evt -> listBActionPerformed(evt));
        jPanel2.add(listB, new org.netbeans.lib.awtextra.AbsoluteConstraints(759, 10, 30, 30));

        volumeS.setOrientation(javax.swing.JSlider.VERTICAL);
        volumeS.addChangeListener(evt -> volumeSStateChanged(evt));
        volumeS.addMouseWheelListener(evt -> volumeSMouseWheelMoved(evt));
        jPanel2.add(volumeS, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 10, 17, 106));

        loadFileB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\folder-1.png")); // NOI18N
        loadFileB.addActionListener(evt -> loadFileBActionPerformed(evt));
        jPanel2.add(loadFileB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 30, 30));
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 120));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
           public void playSet()
           {
              
               playB.setIcon(new javax.swing.ImageIcon("â€ªF:\\Final Project\\Player.image\\play-set.png"));
       status="play";
              
           }
           public void pauseSet()
           {
               String s="â€ªF:\\Final Project\\Player.image\\pause-2.png";
       playB.setIcon(new javax.swing.ImageIcon(s));
       status="pause";
       
           }
    private void playBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playBActionPerformed
        Player p=new Player();
        if("pause".equals(status)){
            
     playB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\pause-2.png"));
      
       status="play";
        p.play();
        
        
       }
       else if("play".equals(status))
       {
            playB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\play-set.png"));
       status="pause";
           p.pause();
      
       }


// TODO add your handling code here:
    }//GEN-LAST:event_playBActionPerformed

    private void ccBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccBActionPerformed
        if(!ccB.isSelected()){
            
            ccP.setVisible(false);
            
            
        } else if(ccB.isSelected()) {
         
            ccP.setVisible(true);
            PlayerGUI.this.revalidate();
            PlayerGUI.this.repaint();
        }
    }//GEN-LAST:event_ccBActionPerformed

    private void volumeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volumeBActionPerformed
        // TODO add your handling code here:
        if(vol==1)
        {
            volumeS.setValue(0);
            volumeB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\muted.png"));
        vol=0;
        }
        else if (vol==0)
        {
            volumeS.setValue(100);
        volumeB.setIcon(new javax.swing.ImageIcon("â€ªâ€ªF:\\Final Project\\Player.image\\Vol.png"));
        vol=1;
        }
    }//GEN-LAST:event_volumeBActionPerformed

    private void listBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listBActionPerformed
         ListFrame l=new ListFrame();
   
        
        
         l.setVisible(true);
       
        
       
          
        
               // TODO add your handling code here:
    }//GEN-LAST:event_listBActionPerformed

    private void volumeSStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_volumeSStateChanged
            if(volumeS.getValue()==0)
    {        // TODO add your handling code here:
        volumeB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\muted.png"));
        vol=0;
    }
    else if(volumeS.getValue()!=0)
    {
    volumeB.setIcon(new javax.swing.ImageIcon("â€ªF:\\Final Project\\Player.image\\Vol.png"));
        vol=1;
    
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_volumeSStateChanged

    private void loadFileBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFileBActionPerformed

        
        
   JFileChooser f = new JFileChooser();
        f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY); 
        f.showSaveDialog(null);
        // TODO add your handling code here:
        
       Player p=new Player();
       
       path=f.getSelectedFile().toString();
       p.retrive(f.getSelectedFile().toString());
      
       
    }//GEN-LAST:event_loadFileBActionPerformed

    private void nextBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBActionPerformed
        Player p=new Player();
        p.next();
        if(!p.player.isPaused())
        {
             playB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\pause-2.png"));
       status="play";
        }
// TODO add your handling code here:
    }//GEN-LAST:event_nextBActionPerformed

    private void stopBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopBActionPerformed
      Player p=new Player();
      p.stop();
      if(Player.player.isStopped())
       {playB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\play-set.png"));
       status="pause";
       }
        // TODO add your handling code here:
    }//GEN-LAST:event_stopBActionPerformed

    private void prevBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevBActionPerformed
     Player p=new Player();
     p.prev();
     if(!p.player.isPaused())
        {
             playB.setIcon(new javax.swing.ImageIcon("F:\\Final Project\\Player.image\\pause-2.png"));
       status="play";
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_prevBActionPerformed

    private void loopBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loopBActionPerformed
       Player p=new Player();
       p.setRep(ccB.isSelected());
        // TODO add your handling code here:
    }//GEN-LAST:event_loopBActionPerformed

    private void volumeSMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volumeSMouseMoved
      
        // TODO add your handling code here:
    }//GEN-LAST:event_volumeSMouseMoved

    private void volumeSMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_volumeSMouseWheelMoved
       int val=volumeS.getValue();
        if (evt.getWheelRotation() < 0) {
                 if(val<100)  
                volumeS.setValue(val-(evt.getWheelRotation()));
                    System.out.println("Rotated Up... " + evt.getWheelRotation());
                } else {
                    if(val>0)
                    volumeS.setValue(val-(evt.getWheelRotation()));
                    System.out.println("Rotated Down... " + evt.getWheelRotation());
                }

                // Get scrolled unit amount
                System.out.println("ScrollAmount: " + evt.getScrollAmount());

                // WHEEL_UNIT_SCROLL representing scroll by unit such as the
                // arrow keys. WHEEL_BLOCK_SCROLL representing scroll by block
                // such as the page-up or page-down key.
              /*  if (evt.getScrollType() == MouseWheelEvent.WHEEL_UNIT_SCROLL) {
                    System.out.println("MouseWheelEvent.WHEEL_UNIT_SCROLL");
                }

                if (evt.getScrollType() == MouseWheelEvent.WHEEL_BLOCK_SCROLL) {
                    System.out.println("MouseWheelEvent.WHEEL_BLOCK_SCROLL");
                }*/


// TODO add your handling code here:
    }//GEN-LAST:event_volumeSMouseWheelMoved

    private void jLabel3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton ccB;
    private javax.swing.JScrollPane ccP;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton listB;
    private javax.swing.JButton loadFileB;
    private javax.swing.JToggleButton loopB;
    private javax.swing.JSlider musicS;
    private javax.swing.JButton nextB;
    private javax.swing.JButton playB;
    private javax.swing.JButton prevB;
    private javax.swing.JButton stopB;
    private javax.swing.JButton volumeB;
    private javax.swing.JSlider volumeS;
    // End of variables declaration//GEN-END:variables
}
